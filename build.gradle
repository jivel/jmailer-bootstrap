def springVersion = '4.1.7.RELEASE'
def aspectjVersion = '1.8.7'
def groovyVersion = '2.4.5'
def jmsApiVersion = '1.1-rev-1'
def javassistVersion = '3.8.0.GA'
def hibernateValidatorVersion = '5.1.3.Final'
def currentEnvironment = project.hasProperty("environment")?environment:"development"
def jmailerConfigurationDir = "${System.getProperty('user.home')}/.jmailer"

subprojects {
  apply plugin:'groovy'
  version = "0.0.1"
  group = "com.jos.dem"

  repositories {
    mavenCentral()
  }
}

project(":emailer:sender"){
  dependencies{
    compile "org.codehaus.groovy:groovy:$groovyVersion"
    compile 'org.springframework.integration:spring-integration-mail:4.2.0.RELEASE'
    compile "org.freemarker:freemarker:2.3.23"
    compile 'javax.mail:mail:1.4.7'
  }
}

project(":emailer:formatter"){
  dependencies{
    compile "javax.jms:jms-api:$jmsApiVersion"
    compile "org.hibernate:hibernate-validator:$hibernateValidatorVersion"
    compile 'org.apache.activemq:activemq-spring:5.12.0'
    compile project(":emailer:sender")
  }
}

project(":web"){
  apply plugin: 'war'
  apply plugin: 'jetty'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  dependencies {
    compile "org.springframework:spring-webmvc:$springVersion"
    compile "org.springframework:spring-jms:$springVersion"
    compile "org.aspectj:aspectjrt:$aspectjVersion"
    compile "org.aspectj:aspectjweaver:$aspectjVersion"
    compile 'com.google.code.gson:gson:2.2.2'
    compile 'log4j:log4j:1.2.17'
    compile 'javax.servlet:servlet-api:2.5'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    compile project(":emailer:formatter")
  }

  jettyRun{
    contextPath = "jmailer"
    httpPort = 8080
  }

  jettyRunWar{
    contextPath = "jmailer"
    httpPort = 8080
  }

  println "Setting environment to: ${currentEnvironment}"

  task settingEnvironment(type:Copy) {
    from jmailerConfigurationDir
    into 'src/main/resources/config'
    include "emailer-${currentEnvironment}.properties"
    rename { String fileName -> fileName.replace("-${currentEnvironment}", '') }
  }

  task settingLog4jProperties(type:Copy){
    from jmailerConfigurationDir
    into "src/main/resources/"
    include "log4j-${currentEnvironment}.properties"
    rename { String fileName -> fileName.replace("-${currentEnvironment}", '') }
  }

  processResources.dependsOn "settingEnvironment", "settingLog4jProperties"
}
